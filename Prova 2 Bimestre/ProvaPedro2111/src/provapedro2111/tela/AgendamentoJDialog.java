/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package provapedro2111.tela;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import provapedro2111.DAO.AgendamentoDAO;
import provapedro2111.DAO.FuncionarioDAO;
import provapedro2111.DAO.MotoristaDAO;
import provapedro2111.DAO.VeiculoDAO;
import provapedro2111.Util.DateUtil;
import provapedro2111.model.Agendamento;
import provapedro2111.model.Funcionario;
import provapedro2111.model.Motorista;
import provapedro2111.model.Veiculo;

/**
 *
 * @author fag
 */
public class AgendamentoJDialog extends javax.swing.JDialog {

    AgendamentoDAO agendamentoDao;
    FuncionarioDAO funcionarioDao;
    MotoristaDAO motoristaDao;
    VeiculoDAO veiculoDao;

    /**
     * Creates new form AgendamentoJDialog
     */
    public AgendamentoJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        agendamentoDao = new AgendamentoDAO();
        funcionarioDao = new FuncionarioDAO();
        motoristaDao = new MotoristaDAO();
        veiculoDao = new VeiculoDAO();
        setTfCodigo();
        try {
            carregaTable(agendamentoDao.getAll());
        } catch (SQLException ex) {
            Logger.getLogger(AgendamentoJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
        btSalvar.setEnabled(false);
        tfCodigo.setEnabled(false);
        desabilitaCampos(false);
        habilitaFiltroCodigo();
        tfFiltroCodigo.setEnabled(false);
        carregaComboFuncionario();
        carregaComboMotorista();
        carregaComboVeiculo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgFiltro = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbAgendamento = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tfCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbVeiculo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        tfOrigem = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfDestino = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cbMotorista = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        tfDtSaida = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        tfDtRetorno = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        tfObservacao = new javax.swing.JTextField();
        btNovo = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btRemover = new javax.swing.JButton();
        rbCodigo = new javax.swing.JRadioButton();
        rbOrigem = new javax.swing.JRadioButton();
        rbDestino = new javax.swing.JRadioButton();
        tfFiltroCodigo = new javax.swing.JTextField();
        tfFiltroOrigem = new javax.swing.JTextField();
        tfFiltroDestino = new javax.swing.JTextField();
        btFiltrar = new javax.swing.JButton();
        btFiltrarTodos = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        tfNrPassageiros = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });

        tbAgendamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Código", "Origem", "Destino", "Saída", "Retorno"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbAgendamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbAgendamentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbAgendamento);

        jLabel1.setText("Código");

        jLabel2.setText("Veículo");

        cbVeiculo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbVeiculo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbVeiculoItemStateChanged(evt);
            }
        });

        jLabel3.setText("Origem");

        jLabel4.setText("Destino");

        jLabel5.setText("Motorista");

        cbMotorista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Saída");

        try {
            tfDtSaida.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel8.setText("Retorno");

        try {
            tfDtRetorno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jLabel9.setText("Observação");

        btNovo.setText("Novo");
        btNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoActionPerformed(evt);
            }
        });

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btRemover.setText("Remover");
        btRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoverActionPerformed(evt);
            }
        });

        bgFiltro.add(rbCodigo);
        rbCodigo.setText("Código");
        rbCodigo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbCodigoStateChanged(evt);
            }
        });

        bgFiltro.add(rbOrigem);
        rbOrigem.setText("Origem");
        rbOrigem.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbOrigemStateChanged(evt);
            }
        });

        bgFiltro.add(rbDestino);
        rbDestino.setText("Destino");
        rbDestino.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                rbDestinoStateChanged(evt);
            }
        });

        btFiltrar.setText("Filtrar");
        btFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFiltrarActionPerformed(evt);
            }
        });

        btFiltrarTodos.setText("Mostrar Todos");
        btFiltrarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFiltrarTodosActionPerformed(evt);
            }
        });

        jLabel10.setText("Nº Passageiros");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbVeiculo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfOrigem))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfDestino))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbMotorista, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbOrigem)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfFiltroOrigem))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbCodigo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfFiltroCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(rbDestino)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tfFiltroDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btFiltrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btFiltrarTodos, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfDtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfDtRetorno))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfObservacao))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(tfNrPassageiros, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(cbVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cbMotorista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(tfDtSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(tfDtRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(tfObservacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(tfNrPassageiros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btNovo)
                            .addComponent(btSalvar)
                            .addComponent(btRemover))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbCodigo)
                            .addComponent(tfFiltroCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btFiltrarTodos))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbOrigem)
                            .addComponent(tfFiltroOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btFiltrar))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbDestino)
                            .addComponent(tfFiltroDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 8, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbAgendamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbAgendamentoMouseClicked
        Agendamento agendamento = new Agendamento();
        try {
            agendamento = agendamentoDao.getById((int) tbAgendamento.getValueAt(tbAgendamento.getSelectedRow(), 0));
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        novo();
        btSalvar.setText("Atualizar");
        tfCodigo.setText(String.valueOf(agendamento.getCodigo()));
        cbVeiculo.setSelectedItem(agendamento.getVeiculo());
        tfOrigem.setText(agendamento.getOrigem());
        tfDestino.setText(agendamento.getDestino());
        cbMotorista.setSelectedItem(agendamento.getMotorista());
        tfDtSaida.setText(DateUtil.dateToString(agendamento.getDtSaida()));
        tfDtRetorno.setText(DateUtil.dateToString(agendamento.getDtRetorno()));
        tfObservacao.setText(agendamento.getObservacao());
        tfNrPassageiros.setText(String.valueOf(agendamento.getNrPassageiros()));
        btSalvar.setEnabled(true);
        btRemover.setEnabled(true);
    }//GEN-LAST:event_tbAgendamentoMouseClicked

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        if (tfOrigem.getText().trim().length() > 0
                && tfDestino.getText().trim().length() > 0
                && tfDtSaida.getText().trim().length() > 0
                && tfDtRetorno.getText().trim().length() > 0
                && tfObservacao.getText().trim().length() > 0
                && tfNrPassageiros.getText().trim().length() > 0) {
            btSalvar.setEnabled(true);
        } else {
            btSalvar.setEnabled(false);
        }
        if (tbAgendamento.getSelectedRow() != -1) {
            btRemover.setEnabled(true);
        } else {
            btRemover.setEnabled(false);
        }
    }//GEN-LAST:event_formMouseMoved

    private void btNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoActionPerformed
        btSalvar.setText("Salvar");
        limpaCampos();
        novo();
    }//GEN-LAST:event_btNovoActionPerformed

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        if (validaCampos() == true) {
            salvar();
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoverActionPerformed
        remover();
        limpaCampos();
        desabilitaCampos(false);
    }//GEN-LAST:event_btRemoverActionPerformed

    private void btFiltrarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFiltrarTodosActionPerformed
        try {
            carregaTable(agendamentoDao.getAll());
        } catch (SQLException ex) {
            Logger.getLogger(AgendamentoJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btFiltrarTodosActionPerformed

    private void btFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFiltrarActionPerformed
        filtrar();
    }//GEN-LAST:event_btFiltrarActionPerformed

    private void rbCodigoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbCodigoStateChanged
        habilitaFiltroCodigo();
    }//GEN-LAST:event_rbCodigoStateChanged

    private void rbOrigemStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbOrigemStateChanged
        habilitaFiltroOrigem();
    }//GEN-LAST:event_rbOrigemStateChanged

    private void rbDestinoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_rbDestinoStateChanged
        habilitaFiltroDestino();
    }//GEN-LAST:event_rbDestinoStateChanged

    private void cbVeiculoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbVeiculoItemStateChanged
        Veiculo veiculo = new Veiculo();
        veiculo = (Veiculo) cbVeiculo.getSelectedItem();
        tfNrPassageiros.setText(String.valueOf(veiculo.getPassageiros()));
    }//GEN-LAST:event_cbVeiculoItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgendamentoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgendamentoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgendamentoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgendamentoJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AgendamentoJDialog dialog = new AgendamentoJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgFiltro;
    private javax.swing.JButton btFiltrar;
    private javax.swing.JButton btFiltrarTodos;
    private javax.swing.JButton btNovo;
    private javax.swing.JButton btRemover;
    private javax.swing.JButton btSalvar;
    private javax.swing.JComboBox<String> cbMotorista;
    private javax.swing.JComboBox<String> cbVeiculo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbCodigo;
    private javax.swing.JRadioButton rbDestino;
    private javax.swing.JRadioButton rbOrigem;
    private javax.swing.JTable tbAgendamento;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfDestino;
    private javax.swing.JFormattedTextField tfDtRetorno;
    private javax.swing.JFormattedTextField tfDtSaida;
    private javax.swing.JTextField tfFiltroCodigo;
    private javax.swing.JTextField tfFiltroDestino;
    private javax.swing.JTextField tfFiltroOrigem;
    private javax.swing.JTextField tfNrPassageiros;
    private javax.swing.JTextField tfObservacao;
    private javax.swing.JTextField tfOrigem;
    // End of variables declaration//GEN-END:variables

    private void setTfCodigo() {
        try {
            tfCodigo.setText(String.valueOf(agendamentoDao.getLastId()));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void carregaTable(List<Agendamento> agendamentoList) {
        if (agendamentoList == null) {
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tbAgendamento.getModel();
        model.setRowCount(0);
        for (Agendamento a : agendamentoList) {
            model.addRow(new Object[]{a.getCodigo(), a.getOrigem(), a.getDestino(), a.getDtSaida(), a.getDtRetorno()});
        }
    }

    private void desabilitaCampos(boolean ativo) {
        cbVeiculo.setEnabled(ativo);
        tfOrigem.setEnabled(ativo);
        tfDestino.setEnabled(ativo);
        cbMotorista.setEnabled(ativo);
        tfDtSaida.setEnabled(ativo);
        tfDtRetorno.setEnabled(ativo);
        tfObservacao.setEnabled(ativo);
        tfNrPassageiros.setEnabled(false);
    }

    private void habilitaFiltroCodigo() {
        tfFiltroDestino.setText("");
        tfFiltroDestino.setEnabled(false);
        tfFiltroOrigem.setText("");
        tfFiltroOrigem.setEnabled(false);
        tfFiltroCodigo.setEnabled(true);
    }

    private void carregaComboFuncionario() {
        try {
            DefaultComboBoxModel modeloComboFuncionario;
            modeloComboFuncionario = new DefaultComboBoxModel(funcionarioDao.getAll().toArray());
        } catch (SQLException ex) {
            Logger.getLogger(AgendamentoJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void carregaComboMotorista() {
        try {
            DefaultComboBoxModel modeloComboMotorista;
            modeloComboMotorista = new DefaultComboBoxModel(motoristaDao.getAll().toArray());
            cbMotorista.setModel(modeloComboMotorista);
        } catch (SQLException ex) {
            Logger.getLogger(AgendamentoJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void carregaComboVeiculo() {
        try {
            DefaultComboBoxModel modeloComboveiculo;
            modeloComboveiculo = new DefaultComboBoxModel(veiculoDao.getAll().toArray());
            cbVeiculo.setModel(modeloComboveiculo);
        } catch (SQLException ex) {
            Logger.getLogger(AgendamentoJDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void novo() {
        try {
            tfCodigo.setText(String.valueOf(agendamentoDao.getLastId()));
            tfCodigo.setEditable(false);
            Veiculo veiculo = new Veiculo();
            veiculo = (Veiculo) cbVeiculo.getSelectedItem();
            tfNrPassageiros.setText(String.valueOf(veiculo.getPassageiros()));
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        desabilitaCampos(true);
        btSalvar.setEnabled(true);
    }

    private void limpaCampos() {
        tfCodigo.setText("");
        tfOrigem.setText("");
        tfDestino.setText("");
        tfDtSaida.setText("");
        tfDtRetorno.setText("");
        tfObservacao.setText("");
        tfNrPassageiros.setText("");
    }

    private boolean validaCampos() {
        if (tfCodigo.getText().trim().length() <= 0) {
            JOptionPane.showMessageDialog(null, "Informe um código para salvar.", "Atenção",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (tfOrigem.getText().trim().length() <= 0) {
            JOptionPane.showMessageDialog(null, "Informe uma origem para salvar.", "Atenção",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (tfDestino.getText().trim().length() <= 0) {
            JOptionPane.showMessageDialog(null, "Informe um destino para salvar.", "Atenção",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (tfDtSaida.getText().trim().length() <= 0) {
            JOptionPane.showMessageDialog(null, "Informe uma data de saida para salvar.", "Atenção",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (tfDtRetorno.getText().trim().length() <= 0) {
            JOptionPane.showMessageDialog(null, "Informe uma data de retorno para salvar.", "Atenção",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (tfObservacao.getText().trim().length() <= 0) {
            JOptionPane.showMessageDialog(null, "Informe uma observacao para salvar.", "Atenção",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (tfNrPassageiros.getText().trim().length() <= 0) {
            JOptionPane.showMessageDialog(null, "Informe um numero de passageiros para salvar.", "Atenção",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private void salvar() {
        try {
            Agendamento agendamento = new Agendamento();
            agendamento.setCodigo(Integer.parseInt(tfCodigo.getText().trim()));
            agendamento.setVeiculo((Veiculo) cbVeiculo.getSelectedItem());
            agendamento.setOrigem(tfOrigem.getText().trim());
            agendamento.setDestino(tfDestino.getText().trim());
            agendamento.setMotorista((Motorista) cbMotorista.getSelectedItem());
            Motorista motorista = new Motorista();
            motorista = (Motorista) cbMotorista.getSelectedItem();
            agendamento.setFuncionario(motorista.getFuncionario());
            agendamento.setDtSaida(DateUtil.stringToDate(tfDtSaida.getText().trim()));
            agendamento.setDtRetorno(DateUtil.stringToDate(tfDtRetorno.getText().trim()));
            agendamento.setObservacao(tfObservacao.getText().trim());
            agendamento.setNrPassageiros(Integer.parseInt(tfNrPassageiros.getText().trim()));
            try {
                if (agendamentoDao.getLastId() == Integer.parseInt(tfCodigo.getText())) {
                    agendamentoDao.save(agendamento);
                } else {
                    agendamentoDao.update(agendamento);
                    btSalvar.setText("Salvar");
                }
                JOptionPane.showMessageDialog(null, "Agendamento Salvo com Sucesso");
                limpaCampos();
                desabilitaCampos(false);
                carregaTable(agendamentoDao.getAll());
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Caracter Inválido", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void remover() {
        int linhaSelecionada = tbAgendamento.getSelectedRow();
        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(null, "Deve-se selecionar uma linha para ser removido", "Atenção", JOptionPane.ERROR_MESSAGE);
            return;
        }
        int codigoRemover = (int) tbAgendamento.getValueAt(linhaSelecionada, 0);
        try {
            agendamentoDao.delete(codigoRemover);
            JOptionPane.showMessageDialog(null, "Agendamento Removido com Sucesso!");
            carregaTable(agendamentoDao.getAll());
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    private void filtrar() {
        try {
            if (rbCodigo.isSelected() && tfFiltroCodigo.getText().trim().length() > 0) {
                Agendamento agendamento = agendamentoDao.getById(Integer.parseInt(tfFiltroCodigo.getText()));
                List<Agendamento> agendamentoList = new ArrayList<>();
                agendamentoList.add(agendamento);
                carregaTable(agendamentoList);
            } else if (rbOrigem.isSelected() && tfFiltroOrigem.getText().trim().length() > 0) {
                carregaTable(agendamentoDao.getByName(tfFiltroOrigem.getText()));
            } else if (rbDestino.isSelected() && tfFiltroDestino.getText().trim().length() > 0) {
                carregaTable(agendamentoDao.getByDestino(tfFiltroDestino.getText()));
            } else {
                JOptionPane.showMessageDialog(null, "Informe o filtro desejado para pesquisa", "Atenção", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(null, "Algum campo foi informado incorretamente", null, 0);
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    private void habilitaFiltroOrigem() {
        tfFiltroDestino.setText("");
        tfFiltroDestino.setEnabled(false);
        tfFiltroCodigo.setText("");
        tfFiltroCodigo.setEnabled(false);
        tfFiltroOrigem.setEnabled(true);
    }

    private void habilitaFiltroDestino() {
        tfFiltroCodigo.setText("");
        tfFiltroCodigo.setEnabled(false);
        tfFiltroOrigem.setText("");
        tfFiltroOrigem.setEnabled(false);
        tfFiltroDestino.setEnabled(true);
    }

}
